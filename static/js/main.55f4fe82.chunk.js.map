{"version":3,"sources":["logo.svg","Viz.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Viz","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","transitionDuration","setState","data","cleanData","jsonData","items","initializeVizSpace","transition","d3","duration","initializeScale","initializeAxis","updateDots","arguments","length","undefined","filter","d","glassdoorRating","svgSize","availableSpace","width","margin","left","right","height","top","bottom","svg","node","attrs","viewBox","concat","getSvgOuterWidth","getSvgOuterHeight","preserveAspectRatio","append","attr","tooltipBox","class","styles","opacity","xScale","domain","state","map","fortune500Rank","range","yScale","xAxis","transform","yAxis","style","text","_this2","dots","selectAll","companyTitle","enter","r","cx","cy","fill","on","pageX","pageY","html","_this3","react_default","a","createElement","className","ref","Component","App","Viz_Viz","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55f4fe82.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport * as d3 from \"d3\";\nimport \"d3-selection-multi\";\n\nimport jsonData from \"./data/sample-company-ratings.json\";\nimport \"./Viz.scss\"\n\nexport default class Viz extends Component {\n\n    xScale;\n    yScale;\n    svg;\n    transitionDuration = 300;\n\n    static propTypes = {\n        // prop: PropTypes\n        svgSize: PropTypes.shape({\n            availableSpace: PropTypes.shape({\n                width: PropTypes.number,\n                height: PropTypes.number,\n            }),\n            margin: PropTypes.shape({\n                top: PropTypes.number,\n                left: PropTypes.number,\n                right: PropTypes.number,\n                bottom: PropTypes.number,\n            })\n        })\n    }\n\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount() {\n        this.setState({\n            data: this.cleanData(jsonData.items)\n        })\n        this.initializeVizSpace()\n    }\n\n    componentDidUpdate() {\n        this.transition = d3.transition().duration(this.transitionDuration);\n        this.initializeScale()\n        this.initializeAxis()\n        this.updateDots()\n    }\n\n    /**\n     * Data Processing\n     */\n\n    cleanData(data = []) {\n        return data.filter((d) => {\n            return (\n                d.glassdoorRating !== undefined\n            )\n        })\n    }\n\n    /**\n     * Helper Functions\n     */\n\n    getSvgOuterWidth() {\n        return (\n            this.props.svgSize.availableSpace.width +\n            this.props.svgSize.margin.left +\n            this.props.svgSize.margin.right\n        )\n    }\n\n    getSvgOuterHeight() {\n        return (\n            this.props.svgSize.availableSpace.height +\n            this.props.svgSize.margin.top +\n            this.props.svgSize.margin.bottom\n        )\n    }\n\n    /**\n     * D3 Function\n     */\n\n    initializeVizSpace() {\n        // initialize svg\n        this.svg = d3.select(this.node)\n            .attrs({\n                viewBox: `0 0 ${this.getSvgOuterWidth()} ${this.getSvgOuterHeight()}`,\n                preserveAspectRatio: `xMidYMid meet`\n            })\n            .append(\"g\")\n            .attr(\"transform\", `translate(${this.props.svgSize.margin.left}, ${this.props.svgSize.margin.top})`)\n            ;\n\n        // intialize tooltip\n        this.tooltipBox = d3.select('body').append('div')\n            .attrs({\n                class: `tooltip-box`\n            })\n            .styles({\n                opacity: 0\n            })\n    }\n\n    initializeScale() {\n        this.xScale = d3.scaleLinear()\n            .domain([0, d3.max(this.state.data.map((d) => d.fortune500Rank))])\n            .range([0, this.props.svgSize.availableSpace.width])\n            ;\n\n        this.yScale = d3.scaleLinear()\n            .domain([0, d3.max(this.state.data.map((d) => {\n                return d.glassdoorRating\n            }))])\n            .range([this.props.svgSize.availableSpace.height, 0])\n            ;\n    }\n\n    initializeAxis() {\n        this.xAxis = this.svg.append(\"g\")\n            .attrs({\n                class: 'x-axis',\n                transform: `translate(0, ${this.props.svgSize.availableSpace.height})`\n            })\n            .call(d3.axisBottom(this.xScale))\n\n        this.yAxis = this.svg.append(\"g\")\n            .attrs({\n                \"class\": \"y-axis\"\n            })\n            .call(d3.axisLeft(this.yScale))\n\n        // text label for the x axis\n        this.svg.append(\"text\")\n            .attr(\"transform\",\n                \"translate(\" + (this.props.svgSize.availableSpace.width / 2) + \" ,\" +\n                (this.props.svgSize.availableSpace.height + this.props.svgSize.margin.top) + \")\")\n            .style(\"text-anchor\", \"middle\")\n            .text(\"Fortune Ranking\");\n\n        // text label for the y axis\n        this.svg.append(\"text\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .attr(\"y\", 0 - this.props.svgSize.margin.left * 0.8 )\n            .attr(\"x\", 0 - (this.props.svgSize.availableSpace.height / 2) )\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(\"Glassdoor Rating\")\n    }\n\n    updateDots() {\n        this.dots = this.svg.selectAll(\".dot\").data(this.state.data, (d) => {\n            return d.companyTitle;\n        })\n\n        // new \n        this.dots.enter().append(\"circle\")\n            .attrs({\n                class: `dot`,\n                r: 4,\n                cx: (d) => this.xScale(d.fortune500Rank),\n                cy: (d) => this.yScale(d.glassdoorRating),\n                fill: \"red\"\n            })\n            .on(\"mousemove\", (d) => {\n                this.tooltipBox\n                    .styles({\n                        left: `${d3.event.pageX - 100}px`,\n                        top: `${d3.event.pageY + 45}px`,\n                        opacity: 0.9\n                    })\n                    .html(`\n                        <span>Company: ${d.companyTitle}</span>\n                        <span>Rating: ${d.glassdoorRating}</span>\n                        <span>Fortune Rank: ${d.fortune500Rank}</span>\n                    `)\n                    ;\n            })\n            .on(\"mouseout\", (d) => {\n                this.tooltipBox\n                    .styles({\n                        opacity: 0\n                    })\n                    ;\n            })\n        // udpate\n\n        // remove\n    }\n\n    render() {\n        return (\n            <div className=\"svg-container\">\n                <svg className=\"svg-content\" ref={node => this.node = node}\n                >\n                </svg>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Viz from \"./Viz\";\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props)\n        this.svgSize = {\n            availableSpace: {\n                width: 700,\n                height: 300,\n            },\n            margin: {\n                top: 50,\n                left: 80,\n                right: 50,\n                bottom: 80,\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <h1>\n                        Vizsualizing Fortune 1000's Glassdoor Rating\n                    </h1>\n                </header>\n                <Viz\n                    svgSize={this.svgSize}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}